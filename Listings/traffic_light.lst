C51 COMPILER V9.60.0.0   TRAFFIC_LIGHT                                                     12/14/2022 10:12:53 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TRAFFIC_LIGHT
OBJECT MODULE PLACED IN .\Objects\traffic_light.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE traffic_light.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\traffic_light.lst) TABS(2) OBJECT(.\Objects\traffic_light.obj)

line level    source

   1          #include "headfile.h"
   2          
   3          #define DONT_DISPLAY 255 // DisplayDigit函数的val为该值时，两位均不显示
   4          #define SEG_OFF 15       // Write7219向某位数码管写入该值时，该位数码管不显示
   5          
   6          static uchar last_display_val[4];
   7          digs_addr code ONES_BIT[] = {EAST_ONES, SOUTH_ONES, WEST_ONES, NORTH_ONES};
   8          digs_addr code TENS_BIT[] = {EAST_TENS, SOUTH_TENS, WEST_TENS, NORTH_TENS};
   9          uchar remain_time[4];
  10          uchar red_time[4];
  11          uchar yellow_time[4];
  12          uchar green_time[4];
  13          uchar current_color[4];
  14          TrafficLightColor next_status;
  15          
  16          void TrafficLightInit()
  17          {
  18   1          uchar i;
  19   1          for (i = 0; i < TRAFFIC_LIGHT_MAX; i++)
  20   1          {
  21   2              SetLedBit(i, LED_OFF);
  22   2          }
  23   1          // 初始状态
  24   1          red_time[EAST] = 60, yellow_time[EAST] = 5, green_time[EAST] = 15;
  25   1          red_time[SOUTH] = 60, yellow_time[SOUTH] = 5, green_time[SOUTH] = 15;
  26   1          red_time[WEST] = 60, yellow_time[WEST] = 5, green_time[WEST] = 15;
  27   1          red_time[NORTH] = 60, yellow_time[NORTH] = 5, green_time[NORTH] = 15;
  28   1      
  29   1          remain_time[EAST] = 15;
  30   1          remain_time[SOUTH] = 20;
  31   1          remain_time[WEST] = 40;
  32   1          remain_time[NORTH] = 60;
  33   1      
  34   1          SetLedColor(EAST, GREEN);
  35   1          SetLedColor(SOUTH, RED);
  36   1          SetLedColor(WEST, RED);
  37   1          SetLedColor(NORTH, RED);
  38   1      }
  39          
  40          void Write7219(unsigned char address, unsigned char dat)
  41          {
  42   1          unsigned char i;
  43   1          LOAD_7219 = 0; // 拉低片选线，选中器件
  44   1          // 发送地址
  45   1          for (i = 0; i < 8; i++) // 移位循环8次
  46   1          {
  47   2              CLK_7219 = 0;                     // 清零时钟总线
  48   2              DIN_7219 = (bit)(address & 0x80); // 每次取高字节
  49   2              address <<= 1;                    // 左移一位
  50   2              CLK_7219 = 1;                     // 时钟上升沿，发送地址
  51   2          }
  52   1          // 发送数据
  53   1          for (i = 0; i < 8; i++)
  54   1          {
C51 COMPILER V9.60.0.0   TRAFFIC_LIGHT                                                     12/14/2022 10:12:53 PAGE 2   

  55   2              CLK_7219 = 0;
  56   2              DIN_7219 = (bit)(dat & 0x80);
  57   2              dat <<= 1;
  58   2              CLK_7219 = 1; // 时钟上升沿，发送数据
  59   2          }
  60   1          LOAD_7219 = 1; // 发送结束，上升沿锁存数据
  61   1      }
  62          
  63          // MAX7219初始化，设置MAX7219内部的控制寄存器
  64          void Init7219(void)
  65          {
  66   1          Write7219(SHUT_DOWN, 0x01);    // 开启正常工作模式（0xX1）
  67   1          Write7219(DISPLAY_TEST, 0x00); // 选择工作模式（0xX0）
  68   1          Write7219(DECODE_MODE, 0xff);  // 选用全译码模式
  69   1          Write7219(SCAN_LIMIT, 0x07);   // 8只LED全用
  70   1          Write7219(INTENSITY, 0x04);    // 设置初始亮度
  71   1      }
  72          
  73          void DisplayDigit(uchar val, direction dir)
  74          {
  75   1          // @brief 在dir方向展示val,并将本次显示的值保存在last_变量中
  76   1          // @note  这是唯一允许调用数码管显示的方式
  77   1          static uchar ones, tens;
  78   1      
  79   1          if (val == DONT_DISPLAY)
  80   1          {
  81   2              // 两位均不显示
  82   2              ones = SEG_OFF;
  83   2              tens = SEG_OFF;
  84   2          }
  85   1          else
  86   1          {
  87   2              ones = val % 10;
  88   2              tens = (val / 10 % 10) == 0 ? SEG_OFF : (val / 10 % 10); // 如果十位为0，则不显示
  89   2          }
  90   1      
  91   1          Write7219(ONES_BIT[dir], ones);
  92   1          Write7219(TENS_BIT[dir], tens);
  93   1      
  94   1          if (val == DONT_DISPLAY)
  95   1              last_display_val[dir] = last_display_val[dir];
  96   1          else
  97   1              last_display_val[dir] = val;
  98   1      }
  99          
 100          uchar GetReloadValue(TrafficLightColor next_status, direction dir)
 101          {
 102   1          switch (next_status)
 103   1          {
 104   2          case RED:
 105   2              return red_time[dir];
 106   2          case YELLOW:
 107   2              return yellow_time[dir];
 108   2          case GREEN:
 109   2              return green_time[dir];
 110   2          default:
 111   2              break;
 112   2          }
 113   1          return 0;
 114   1      }
 115          
 116          void DisplayDigitDemo()
C51 COMPILER V9.60.0.0   TRAFFIC_LIGHT                                                     12/14/2022 10:12:53 PAGE 3   

 117          {
 118   1          Write7219(1, 1); // 15为全灭
 119   1          Write7219(2, 2);
 120   1          Write7219(3, 3);
 121   1          Write7219(4, 4);
 122   1          Write7219(5, 5);
 123   1          Write7219(6, 6);
 124   1          Write7219(7, 7);
 125   1          Write7219(8, 8);
 126   1          // Write7219(1, 15); // 15为全灭
 127   1      }
 128          
 129          void TrafficLight()
 130          {
 131   1          direction dir;
 132   1          if (new_second_flag)
 133   1          {
 134   2              for (dir = 0; dir < DIRECTION_MAX; dir++)
 135   2              {
 136   3                  remain_time[dir]--;       // 各方向倒计时更新
 137   3                  if (remain_time[dir] < 5) // 判断是否需要闪烁
 138   3                  {
 139   4                  }
 140   3                  if (remain_time[dir] <= 0)
 141   3                  {
 142   4                      // 装载下一个状态
 143   4                      next_status = (current_color[dir] + 1 >= TRAFFIC_LIGHT_STATUS_MAX) ? (RED) : (current_colo
             -r[dir] + 1);
 144   4                      remain_time[dir] = GetReloadValue(next_status, dir);
 145   4                      SetLedColor(dir, next_status);
 146   4                  }
 147   3      
 148   3                  // 数码管显示剩余秒数
 149   3                  DisplayDigit(remain_time[dir], dir);
 150   3              }
 151   2              new_second_flag = 0; // 清除标志位
 152   2          }
 153   1          else
 154   1              return;
 155   1      }
 156          
 157          void Setting()
 158          {
 159   1          direction dir = NORTH;
 160   1          while (mode == SETTING)
 161   1          {
 162   2              ToggleSegs(dir);
 163   2              DelayMS(1000);
 164   2          }
 165   1          ClockReset();
 166   1      }
 167          
 168          void ClockReset()
 169          {
 170   1          // @brief 重置定时器0以及毫秒、秒计数器
 171   1          TR0 = 0;    // 定时器0开始计时
 172   1          ET0 = 0;    // 关闭定时器0中断
 173   1          TL0 = 0x20; // 设置定时初始值
 174   1          TH0 = 0xD1; // 设置定时初始值
 175   1          milliseconds = 0;
 176   1          seconds = 0;
 177   1          ET0 = 1;
C51 COMPILER V9.60.0.0   TRAFFIC_LIGHT                                                     12/14/2022 10:12:53 PAGE 4   

 178   1          TR0 = 1; // 定时器0开始计时
 179   1      }
 180          
 181          void ToggleSegs(direction dir)
 182          {
 183   1          // @note: 向方向写入DONT_DISPLAY可以使数码管熄灭
 184   1          static uchar ON[4] = {1, 1, 1, 1}; // 4个方向的开关状态
 185   1          if (ON[dir] == 1)
 186   1          {
 187   2              DisplayDigit(DONT_DISPLAY, dir);
 188   2              ON[dir] = 0;
 189   2          }
 190   1          else
 191   1          {
 192   2              DisplayDigit(last_display_val[dir], dir);
 193   2              ON[dir] = 1;
 194   2          }
 195   1      }
 196          
 197          void SetLedColor(direction dir, TrafficLightColor color)
 198          {
 199   1          /**
 200   1           * @brief 设置dir方向的灯色
 201   1           * @ref 参见TrafficLight枚举
 202   1           * @warning 在高频调用该函数时会使输出电平出现暂态，影响稳定性
 203   1           */
 204   1          SetLedBit(GetDstLed(dir, current_color[dir]), LED_OFF);
 205   1          SetLedBit(GetDstLed(dir, color), LED_ON);
 206   1          current_color[dir] = color;
 207   1      }
 208          
 209          uchar GetDstLed(direction dir, TrafficLightColor color)
 210          {
 211   1          /**
 212   1           * @brief 获取dir方向color颜色的LED对应的LEDs枚举变量
 213   1           */
 214   1          uchar dst_led = 0;
 215   1          switch (dir)
 216   1          {
 217   2          case NORTH:
 218   2              dst_led = 0;
 219   2              break;
 220   2          case WEST:
 221   2              dst_led = 3;
 222   2              break;
 223   2          case SOUTH:
 224   2              dst_led = 6;
 225   2              break;
 226   2          case EAST:
 227   2              dst_led = 9;
 228   2              break;
 229   2          default:
 230   2              break;
 231   2          }
 232   1          switch (color)
 233   1          {
 234   2          case GREEN:
 235   2              break;
 236   2          case YELLOW:
 237   2              dst_led += 1;
 238   2              break;
 239   2          case RED:
C51 COMPILER V9.60.0.0   TRAFFIC_LIGHT                                                     12/14/2022 10:12:53 PAGE 5   

 240   2              dst_led += 2;
 241   2              break;
 242   2          default:
 243   2              break;
 244   2          }
 245   1          return dst_led;
 246   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    651    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     31       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
