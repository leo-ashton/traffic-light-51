C51 COMPILER V9.60.0.0   TRAFFIC_LIGHT                                                     12/05/2022 17:58:54 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TRAFFIC_LIGHT
OBJECT MODULE PLACED IN .\Objects\traffic_light.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE traffic_light.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\traffic_light.lst) TABS(2) OBJECT(.\Objects\traffic_light.obj)

line level    source

   1          #include "headfile.h"
   2          
   3          #define DONT_DISPLAY 255 // DisplayDigit函数的val为该值时，两位均不显示
   4          #define SEG_OFF 15       // Write7219向某位数码管写入该值时，该位数码管不显示
   5          
   6          typedef enum digs
   7          {
   8              EAST_TENS = 1,
   9              EAST_ONES,
  10              SOUTH_TENS,
  11              SOUTH_ONES,
  12              WEST_TENS,
  13              WEST_ONES,
  14              NORTH_TENS,
  15              NORTH_ONES,
  16          } digs;
  17          
  18          // static uchar last_east, last_south, last_west, last_north;
  19          static uchar last_display_val[4];
  20          const char ONES_BIT[] = {EAST_ONES, SOUTH_ONES, WEST_ONES, NORTH_ONES};
  21          const char TENS_BIT[] = {EAST_TENS, SOUTH_TENS, WEST_TENS, NORTH_TENS};
  22          
  23          void Write7219(unsigned char address, unsigned char dat)
  24          {
  25   1          unsigned char i;
  26   1          LOAD_7219 = 0; //拉低片选线，选中器件
  27   1          //发送地址
  28   1          for (i = 0; i < 8; i++) //移位循环8次
  29   1          {
  30   2              CLK_7219 = 0;                     //清零时钟总线
  31   2              DIN_7219 = (bit)(address & 0x80); //每次取高字节
  32   2              address <<= 1;                    //左移一位
  33   2              CLK_7219 = 1;                     //时钟上升沿，发送地址
  34   2          }
  35   1          //发送数据
  36   1          for (i = 0; i < 8; i++)
  37   1          {
  38   2              CLK_7219 = 0;
  39   2              DIN_7219 = (bit)(dat & 0x80);
  40   2              dat <<= 1;
  41   2              CLK_7219 = 1; //时钟上升沿，发送数据
  42   2          }
  43   1          LOAD_7219 = 1; //发送结束，上升沿锁存数据
  44   1      }
  45          
  46          // MAX7219初始化，设置MAX7219内部的控制寄存器
  47          void Init7219(void)
  48          {
  49   1          Write7219(SHUT_DOWN, 0x01);    //开启正常工作模式（0xX1）
  50   1          Write7219(DISPLAY_TEST, 0x00); //选择工作模式（0xX0）
  51   1          Write7219(DECODE_MODE, 0xff);  //选用全译码模式
  52   1          Write7219(SCAN_LIMIT, 0x07);   // 8只LED全用
  53   1          Write7219(INTENSITY, 0x04);    //设置初始亮度
  54   1      }
C51 COMPILER V9.60.0.0   TRAFFIC_LIGHT                                                     12/05/2022 17:58:54 PAGE 2   

  55          
  56          void DisplayDigit(uchar val, direction dir)
  57          {
  58   1          // @brief 在dir方向展示val,并将本次显示的值保存在last_变量中
  59   1          // @note  这是唯一允许调用数码管显示的方式
  60   1          static uchar ones, tens;
  61   1      
  62   1          if (val == DONT_DISPLAY)
  63   1          {
  64   2              // 两位均不显示
  65   2              ones = SEG_OFF;
  66   2              tens = SEG_OFF;
  67   2          }
  68   1          else
  69   1          {
  70   2              ones = val % 10;
  71   2              tens = (val / 10 % 10) == 0 ? SEG_OFF : (val / 10 % 10); // 如果十位为0，则不显示
  72   2          }
  73   1          Write7219(ONES_BIT[dir], ones);
  74   1          Write7219(TENS_BIT[dir], tens);
  75   1          // if (dir == EAST)
  76   1          // {
  77   1          //     Write7219(EAST_ONES, ones);
  78   1          //     Write7219(EAST_TENS, tens);
  79   1          // }
  80   1          // if (dir == SOUTH)
  81   1          // {
  82   1          //     Write7219(SOUTH_ONES, ones);
  83   1          //     Write7219(SOUTH_TENS, tens);
  84   1          // }
  85   1          // if (dir == WEST)
  86   1          // {
  87   1          //     Write7219(WEST_ONES, ones);
  88   1          //     Write7219(WEST_TENS, tens);
  89   1          // }
  90   1          // if (dir == NORTH)
  91   1          // {
  92   1          //     Write7219(NORTH_ONES, ones);
  93   1          //     Write7219(NORTH_TENS, tens);
  94   1          // }
  95   1          if (val == DONT_DISPLAY)
  96   1              last_display_val[dir] = last_display_val[dir];
  97   1          else
  98   1              last_display_val[dir] = val;
  99   1      }
 100          
 101          void DisplayDigitDemo()
 102          {
 103   1          Write7219(1, 1); // 15为全灭
 104   1          Write7219(2, 2);
 105   1          Write7219(3, 3);
 106   1          Write7219(4, 4);
 107   1          Write7219(5, 5);
 108   1          Write7219(6, 6);
 109   1          Write7219(7, 7);
 110   1          Write7219(8, 8);
 111   1          // Write7219(1, 15); // 15为全灭
 112   1      }
 113          
 114          void TrafficLight()
 115          {
 116   1      }
C51 COMPILER V9.60.0.0   TRAFFIC_LIGHT                                                     12/05/2022 17:58:54 PAGE 3   

 117          
 118          void Setting()
 119          {
 120   1          direction dir = NORTH;
 121   1          while (mode == SETTING)
 122   1          {
 123   2              ToggleSegs(dir);
 124   2              DelayMS(1000);
 125   2          }
 126   1          ClockReset();
 127   1      }
 128          
 129          void ClockReset()
 130          {
 131   1          // @brief 重置定时器0以及毫秒、秒计数器
 132   1          TR0 = 0;    //定时器0开始计时
 133   1          ET0 = 0;    // 关闭定时器0中断
 134   1          TL0 = 0x20; //设置定时初始值
 135   1          TH0 = 0xD1; //设置定时初始值
 136   1          milliseconds = 0;
 137   1          seconds = 0;
 138   1          ET0 = 1;
 139   1          TR0 = 1; //定时器0开始计时
 140   1      }
 141          
 142          void ToggleSegs(direction dir)
 143          {
 144   1          // @note: 向方向写入DONT_DISPLAY可以使数码管熄灭
 145   1          static uchar ON[4] = {1, 1, 1, 1}; // 4个方向的开关状态
 146   1          if (ON[dir] == 1)
 147   1          {
 148   2              DisplayDigit(DONT_DISPLAY, dir);
 149   2              ON[dir] = 0;
 150   2          }
 151   1          else
 152   1          {
 153   2              DisplayDigit(last_display_val[dir], dir);
 154   2              ON[dir] = 1;
 155   2          }
 156   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    330    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
