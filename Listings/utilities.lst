C51 COMPILER V9.60.0.0   UTILITIES                                                         12/14/2022 21:01:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UTILITIES
OBJECT MODULE PLACED IN .\Objects\utilities.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE utilities.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\utilities.lst) TABS(2) OBJECT(.\Objects\utilities.obj)

line level    source

   1          #include "headfile.h"
   2          
   3          static uchar led_status[TRAFFIC_LIGHT_MAX];
   4          
   5          void DelayMS(uint x)
   6          {
   7   1          uchar i;
   8   1          while (x--)
   9   1              for (i = 0; i < 120; i++)
  10   1                  ;
  11   1      }
  12          
  13          bit Wait4Key(uint max_wait_time, bit key_pin, uchar *timeout_flag)
  14          {
  15   1          /**
  16   1           * @brief Á≠âÂæÖÊåâÈîÆËæìÂÖ•ÔºåÁ≠âÂæÖwait_timeÂêéÂ¶ÇÊó†ËæìÂÖ•ÂàôËøîÂõû
  17   1           * @param max_wait_time ÊúÄÂ§ßËøîÂõûÊó∂Èó¥
  18   1           * @param key_pin ÊåâÈîÆÊâÄÂú®ÁöÑÂºïËÑö
  19   1           * @return Â¶ÇÂú®wait_timeÊúüÈó¥ÊåâÈîÆÁîµÂπ≥ÂèëÁîüÂèòÂåñÔºåËøîÂõûÊ∂àÊäñÂêéÁöÑÊåâÈîÆ‰ø°ÊÅØÔºõÂê¶ÂàôËøîÂ
             -õûÂàùÂßãÊó∂ÂÄô
  20   1           */
  21   1          uchar i;
  22   1          bit in_status = key_pin; // ËøõÂÖ•Á®ãÂ∫èÊó∂ÁöÑÂºïËÑöÁä∂ÊÄÅ
  23   1          bit ret = in_status;
  24   1          while (max_wait_time--)
  25   1          {
  26   2              for (i = 0; i < 120; i++)
  27   2                  if (key_pin == 0)
  28   2                  {
  29   3                      DelayMS(50); // Ê∂àÊäñÂª∂Êó∂
  30   3                      if (key_pin != in_status)
  31   3                      {
  32   4                          *timeout_flag = 0;
  33   4                          return (bit)key_pin; // Â¶ÇÊûúÊåâÈîÆÁîµÂπ≥ÂèëÁîü‰∫ÜÂèòÂåñÔºåÂàôÁõ¥Êé•ËøîÂõû
  34   4                      }
  35   3                  }
  36   2          }
  37   1          *timeout_flag = 1;
  38   1          return in_status;
  39   1      }
  40          
  41          void Hc595SendMultiByte(unsigned short dat)
  42          {
  43   1          /**
  44   1           * @brief ÂêëHC595ÂèëÈÄÅÊï∞ÊçÆÔºåÂπ∂Âπ∂Ë°åËæìÂá∫ÔºõdatÁöÑÈ´ò8‰ΩçÂú®Á¨¨‰∫åÂùóHC595Ôºà‰∏úËæπÁöÑ‰∏â‰∏™ÁÅØ
             -ÊâÄÂú®ÁöÑÈÇ£ÁâáÔºâÔºå‰Ωé8‰ΩçÂú®Á¨¨‰∏ÄÂùóHC595
  45   1           */
  46   1          uchar a;
  47   1      
  48   1          SRCLK = 1;
  49   1          RCLK = 1;
  50   1      
  51   1          for (a = 0; a < sizeof(dat) * 8; a++) // ÂèëÈÄÅ8‰ΩçÊï∞
  52   1          {
C51 COMPILER V9.60.0.0   UTILITIES                                                         12/14/2022 21:01:35 PAGE 2   

  53   2              SER = dat >> ((sizeof(dat) * 8) - 1); // ‰ªéÊúÄÈ´ò‰ΩçÂºÄÂßãÂèëÈÄÅ
  54   2              dat <<= 1;
  55   2      
  56   2              SRCLK = 0; // ÂèëÈÄÅÊó∂Â∫è
  57   2              _nop_();
  58   2              _nop_();
  59   2              SRCLK = 1;
  60   2          }
  61   1          RCLK = 0;
  62   1          _nop_();
  63   1          _nop_();
  64   1          RCLK = 1;
  65   1      }
  66          
  67          unsigned short BinarySeries2ushort(uchar series[], uchar len)
  68          {
  69   1          /**
  70   1           * @brief Â∞Ü‰∫åËøõÂà∂Â∫èÂàóÊï∞ÁªÑËΩ¨Êç¢‰∏∫ÂØπÂ∫îÁöÑÂçÅËøõÂà∂Êï∞
  71   1           * @param series È´ò‰ΩçÂú®ÂâçÁöÑ‰∫åËøõÂà∂Â∫èÂàó
  72   1           * @return ËΩ¨Êç¢ÁöÑÂçÅËøõÂà∂Êï∞
  73   1           */
  74   1          // TODO implement this
  75   1          static ushort ret;
  76   1          static uchar i;
  77   1          for (i = 0, ret = 0; i < len; i++)
  78   1          {
  79   2              ret += (series[i] << i);
  80   2          }
  81   1      
  82   1          return ret;
  83   1      }
  84          
  85          void SetLedBit(LEDs led, bit status)
  86          {
  87   1          /**
  88   1           * @brief ËÆæÁΩÆÊüê‰ΩçLEDÁöÑÁä∂ÊÄÅ„ÄÇËøôÊòØÂîØ‰∏ÄÂÖÅËÆ∏ÁöÑÊìç‰ΩúLEDÁöÑÊñπÂºè„ÄÇ
  89   1           * @param led Êûö‰∏æÁ±ªÂûãÂèòÈáèÔºåÊìç‰ΩúÁöÑLED‰Ωç
  90   1           */
  91   1          led_status[led] = status;
  92   1          Hc595SendMultiByte(
  93   1              BinarySeries2ushort(led_status,
  94   1                                  sizeof(led_status) / sizeof(led_status[0])));
  95   1      }
  96          
  97          void ToggleLedBit(LEDs led)
  98          {
  99   1          /**
 100   1           * @brief ÁøªËΩ¨led
 101   1           * @warning Ê≥®ÊÑèËæìÂÖ•ÂèòÈáèÊòØÂê¶‰∏∫LEDsÊûö‰∏æÂèòÈáè
 102   1           */
 103   1          led_status[led] = !led_status[led];
 104   1          Hc595SendMultiByte(
 105   1              BinarySeries2ushort(led_status,
 106   1                                  sizeof(led_status) / sizeof(led_status[0])));
 107   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    275    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   UTILITIES                                                         12/14/2022 21:01:35 PAGE 3   

   DATA SIZE        =     15       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       4
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
